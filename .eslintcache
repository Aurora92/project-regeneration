[{"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\index.js":"1","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Router.js":"2","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\index.js":"3","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Courses\\index.js":"4","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\AddNewCourse\\index.js":"5","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Course\\index.js":"6","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\MainHeader.js":"7","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\FetchingsStats.js":"8","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\CoursesTable.js":"9","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\CustomNavbar.js":"10","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\api\\index.js":"11"},{"size":156,"mtime":1608062862874,"results":"12","hashOfConfig":"13"},{"size":596,"mtime":1608388593963,"results":"14","hashOfConfig":"13"},{"size":1218,"mtime":1608140526464,"results":"15","hashOfConfig":"13"},{"size":4567,"mtime":1608577041030,"results":"16","hashOfConfig":"13"},{"size":7334,"mtime":1608590920298,"results":"17","hashOfConfig":"13"},{"size":13662,"mtime":1608591835336,"results":"18","hashOfConfig":"13"},{"size":301,"mtime":1608065414595,"results":"19","hashOfConfig":"13"},{"size":1135,"mtime":1608336370904,"results":"20","hashOfConfig":"13"},{"size":4929,"mtime":1608499547572,"results":"21","hashOfConfig":"13"},{"size":1181,"mtime":1608388529233,"results":"22","hashOfConfig":"13"},{"size":86,"mtime":1608061852129,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xz6yqs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\index.js",[],["50","51"],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Router.js",[],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\index.js",[],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Courses\\index.js",["52","53","54"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport { API } from '../api';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\n\r\nconst Courses = () => {\r\n\r\n    const [coursesCards, setCoursesCards] = useState([]);\r\n    const axios = require(\"axios\");\r\n    useEffect(() => {\r\n\r\n        axios\r\n            .get(`${API}/courses`)\r\n            .then(function (response) {\r\n                // handle success\r\n\r\n                setCoursesCards(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n\r\n    }, [coursesCards.length]);\r\n\r\n    return (\r\n\r\n        <Container fluid>\r\n            <Row className=\"my-5\">\r\n                <Col>\r\n                    <CustomNavbar />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h1>All Courses</h1>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n\r\n\r\n                {coursesCards.map((course) => (\r\n                    <Card key={course.id} className=\"p-3\" style={{ width: \"30%\", margin: \"1.5%\" }}>\r\n                        <Card.Header>\r\n                            <Card.Title>{course.title}</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Img variant=\"top\" src={course.imagePath} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <p>Price: <strong>{course.price.normal}â‚¬</strong> | Bookable:{course.open ? (\r\n                                    <svg\r\n                                        width=\"2em\"\r\n                                        height=\"2em\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                        className=\"bi bi-check\"\r\n                                        fill=\"green\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            fillRule=\"evenodd\"\r\n                                            d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"\r\n                                        />\r\n                                    </svg>\r\n                                ) :\r\n                                    <svg\r\n                                        width=\"2em\"\r\n                                        height=\"2em\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                        className=\"bi bi-check\"\r\n                                        fill=\"red\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n\r\n                                        <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n                                    </svg>\r\n                                }\r\n                                </p>\r\n                                <p>Duration: <strong>{course.duration}</strong> </p>\r\n                                <p>Dates: <strong>{new Date(course.dates.start_date).toLocaleDateString('en-GB')} - {new Date(course.dates.end_date).toLocaleDateString('en-GB')}</strong> </p>\r\n\r\n\r\n\r\n\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"primary float-right\"><Link to={`/courses/${course.id}`} style={{\r\n                                textDecoration: \"none\", color: \"white\"\r\n                            }}>View</Link></Button>\r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                ))}\r\n\r\n\r\n\r\n            </Row>\r\n        </Container>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Courses;\r\n\r\n","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\AddNewCourse\\index.js",["55","56","57"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CustomNavbar from \"../CustomNavbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState, useEffect, setState, prevState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../api\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst AddNewCourse = () => {\r\n  const history = useHistory();\r\n  const [price, setPrice] = useState({ normal: \"\", early_bird: \"\" });\r\n  const [dates, setDates] = useState({ start_date: \"\", end_date: \"\" });\r\n  const [instructors, setInstructors] = useState([]);\r\n  const [instructorsInfo, setInstructorsInfo] = useState([]);\r\n  const [newCourse, setNewCourse] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    imagePath: \"\",\r\n    price: {\r\n      normal: 0,\r\n      early_bird: 0,\r\n    },\r\n    dates: {\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n    },\r\n    duration: \"\",\r\n    open: false,\r\n    instructors: [],\r\n    description: \"\",\r\n  });\r\n\r\n\r\n  const handleAddCourse = (e) => {\r\n    const axios = require(\"axios\");\r\n\r\n    axios\r\n      .post(`${API}/courses/`, {\r\n        id: newCourse.id,\r\n        title: newCourse.title,\r\n        imagePath: newCourse.imagePath,\r\n        price: {\r\n          normal: price.normal,\r\n          early_bird: price.early_bird,\r\n        },\r\n        dates: {\r\n          start_date: dates.start_date,\r\n          end_date: dates.end_date,\r\n        },\r\n        duration: newCourse.duration,\r\n        open: newCourse.open,\r\n        instructors: instructors,\r\n        description: newCourse.description,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        handleShow(true);\r\n\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setNewCourse({ ...newCourse, [event.target.name]: event.target.value });\r\n    console.log(event.target.id);\r\n  };\r\n\r\n  const handleChangeOpen = (event) => {\r\n    setNewCourse({ ...newCourse,[event.target.name]: event.target.checked });\r\n  \r\n  };\r\n\r\n\r\n  const handleInstructors = (e) => {\r\n    if (e.target.checked) {\r\n\r\n\r\n      setInstructors(instructors.concat(e.target.value));\r\n      console.log(instructors);\r\n    }\r\n  }\r\n\r\n  const handleDates = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setDates({\r\n      ...dates,\r\n\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handlePrices = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setPrice({\r\n      ...price,\r\n\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const axios = require(\"axios\");\r\n    if (instructorsInfo.length === 0) {\r\n      axios\r\n        .get(`${API}/instructors`)\r\n        .then(function (response) {\r\n          // handle success\r\n\r\n          setInstructorsInfo(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n          // always executed\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => history.push(`/courses`);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <CustomNavbar />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"my-5\">\r\n            <Card.Body>\r\n              <Card.Header>\r\n                <h2>Add New Course</h2>\r\n              </Card.Header>\r\n              <Form>\r\n                <Form.Group name=\"title\" onChange={handleChange}>\r\n                  <Form.Label>\r\n                    <h3>Title</h3>\r\n                  </Form.Label>\r\n                  <Form.Control type=\"text\" name=\"title\" />\r\n                </Form.Group>\r\n                <Form.Group name=\"duration\" onChange={handleChange}>\r\n                  <Form.Label>\r\n                    <h3>Duration</h3>\r\n                  </Form.Label>\r\n                  <Form.Control type=\"text\" />\r\n                </Form.Group>\r\n                <Form.Group name=\"imagePath\" onChange={handleChange}>\r\n                  <Form.Label>\r\n                    <h3>Image Path</h3>\r\n                  </Form.Label>\r\n                  <Form.Control type=\"text\" />\r\n                </Form.Group>\r\n                <Form.Group name=\"open\" onChange={handleChangeOpen}>\r\n                  <h5>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"default-checkbox\"\r\n                      label=\"Bookable\"\r\n                      name=\"open\"\r\n                    />\r\n                  </h5>\r\n                  <hr />\r\n                </Form.Group>\r\n\r\n                <h3>Instructors</h3>\r\n                {instructorsInfo.map((inst) => (\r\n                  <Form.Group>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      key={inst.key}\r\n                      value={inst.id}\r\n                      onChange={handleInstructors}\r\n                      label={inst.name.first + \" \" + inst.name.last + \" \" + inst.id}\r\n                    />\r\n                  </Form.Group>\r\n                ))}\r\n\r\n                <hr />\r\n                <Form.Group name=\"description\" onChange={handleChange}>\r\n                  <Form.Label>\r\n                    <h3>Description</h3>\r\n                  </Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} />\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group onChange={handleDates}>\r\n                  <Form.Label>\r\n                    <h3>Dates</h3>\r\n                  </Form.Label>\r\n                  <h4>Start Date:</h4>\r\n                  <Form.Control name=\"start_date\" type=\"text\" />\r\n\r\n                  <h4>End Date:</h4>\r\n                  <Form.Control name=\"end_date\" type=\"text\" />\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group onChange={handlePrices}>\r\n                  <Form.Label>\r\n                    <h3>Prices</h3>\r\n                  </Form.Label>\r\n                  <h4>Normal:</h4>\r\n                  <Form.Control name=\"normal\" type=\"text\" />\r\n                  <h4>Early Bird:</h4>\r\n                  <Form.Control name=\"early_bird\" type=\"text\" />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={handleAddCourse} variant=\"primary float-right\">\r\n                Add Course\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Course</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>A new course <strong>{newCourse.title}</strong> has been successfully added!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddNewCourse;\r\n","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Course\\index.js",["58","59","60","61","62","63","64","65","66","67"],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\MainHeader.js",[],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\FetchingsStats.js",[],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\Home\\CoursesTable.js",["68","69","70"],"import { API } from '../api';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Course from \"../Course\";\r\n\r\n\r\n\r\nconst CoursesTable = () => {\r\n    const [idCourse, setIdCourse] = useState(\"01\");\r\n\r\n    const [coursesList, setCoursesList] = useState([]);\r\n    const axios = require(\"axios\");\r\n    useEffect(() => {\r\n        if (coursesList.length === 0) {\r\n            axios\r\n                .get(`${API}/courses`)\r\n                .then(function (response) {\r\n                    // handle success\r\n\r\n                    setCoursesList(response.data);\r\n\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    console.log(error);\r\n                })\r\n                .then(function () {\r\n                    // always executed\r\n                });\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    //console.log(Course);\r\n\r\n    return (\r\n\r\n        <Table responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th />\r\n                    <th>Title</th>\r\n                    <th>Bookable</th>\r\n                    <th>Price</th>\r\n                    <th>Date</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {coursesList.slice(Math.max(coursesList.length - 5, 0)).map((course) => (\r\n                    <tr key={course.id}>\r\n                        <td>\r\n                            <svg\r\n                                width=\"2em\"\r\n                                height=\"2em\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                className=\"bi bi-info-square-fill\"\r\n                                fill=\"deepskyblue\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm8.93 4.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\r\n                                />\r\n                            </svg>\r\n                        </td>\r\n                        <td>{course.title}</td>\r\n                        <td>\r\n                            {course.open ? (\r\n                                <svg\r\n                                    width=\"2em\"\r\n                                    height=\"2em\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    className=\"bi bi-check\"\r\n                                    fill=\"green\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"\r\n                                    />\r\n                                </svg>\r\n                            ):\r\n                            <svg\r\n                                    width=\"2em\"\r\n                                    height=\"2em\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    className=\"bi bi-check\"\r\n                                    fill=\"red\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                   \r\n  <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n</svg>\r\n                                }\r\n                        </td>\r\n                        <td>{course.price.normal} â‚¬</td>\r\n                        <td>\r\n                        {new Date(course.dates.start_date).toLocaleDateString( 'en-GB')} - {new Date(course.dates.end_date).toLocaleDateString( 'en-GB')}\r\n                        </td>\r\n                        <td>\r\n                            <Button variant=\"info\" onClick={() => setIdCourse(course.id)}><Link to={`/courses/${course.id}`} style={{\r\n                                textDecoration: \"none\", color: \"white\"\r\n                            }} >View Details</Link></Button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table >\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default CoursesTable;","C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\CustomNavbar.js",[],"C:\\Users\\NarCkiSs\\Desktop\\project-regeneration\\my-project\\src\\api\\index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":35,"column":8,"nodeType":"82","endLine":35,"endColumn":29,"suggestions":"83"},{"ruleId":"75","severity":1,"message":"84","line":9,"column":31,"nodeType":"77","messageId":"78","endLine":9,"endColumn":39},{"ruleId":"75","severity":1,"message":"85","line":9,"column":41,"nodeType":"77","messageId":"78","endLine":9,"endColumn":50},{"ruleId":"80","severity":1,"message":"86","line":131,"column":6,"nodeType":"82","endLine":131,"endColumn":8,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"88","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"89","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":14},{"ruleId":"75","severity":1,"message":"84","line":14,"column":31,"nodeType":"77","messageId":"78","endLine":14,"endColumn":39},{"ruleId":"75","severity":1,"message":"85","line":14,"column":41,"nodeType":"77","messageId":"78","endLine":14,"endColumn":50},{"ruleId":"80","severity":1,"message":"90","line":168,"column":6,"nodeType":"82","endLine":168,"endColumn":8,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"81","line":185,"column":6,"nodeType":"82","endLine":185,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":204,"column":11,"nodeType":"95","endLine":207,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":433,"column":31,"nodeType":"95","endLine":433,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":434,"column":53,"nodeType":"100","endLine":434,"endColumn":68},{"ruleId":"75","severity":1,"message":"101","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":14},{"ruleId":"75","severity":1,"message":"102","line":11,"column":12,"nodeType":"77","messageId":"78","endLine":11,"endColumn":20},{"ruleId":"80","severity":1,"message":"103","line":34,"column":8,"nodeType":"82","endLine":34,"endColumn":10,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'CardDeck' is defined but never used.","Identifier","unusedVar","'CardColumns' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axios'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'setState' is defined but never used.","'prevState' is defined but never used.","React Hook useEffect has a missing dependency: 'instructorsInfo.length'. Either include it or remove the dependency array.",["108"],"'Card' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'axios', 'course.length', and 'id'. Either include them or remove the dependency array.",["109"],["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Course' is defined but never used.","'idCourse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axios' and 'coursesList.length'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [axios, coursesCards.length]",{"range":"122","text":"123"},"Update the dependencies array to be: [instructorsInfo.length]",{"range":"124","text":"125"},"Update the dependencies array to be: [axios, course.length, id]",{"range":"126","text":"127"},"Update the dependencies array to be: [axios]",{"range":"128","text":"129"},"Update the dependencies array to be: [axios, coursesList.length]",{"range":"130","text":"131"},[1101,1122],"[axios, coursesCards.length]",[3285,3287],"[instructorsInfo.length]",[4437,4439],"[axios, course.length, id]",[4794,4796],"[axios]",[976,978],"[axios, coursesList.length]"]